{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Base-TypeScript-NodeJS-CRUD-REST-API",
        "description": "API in NodeJs using TypeScript",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "API version 1.0"
        },
        {
            "url": "/",
            "description": "Local Dev"
        }
    ],
    "tags": [
        {
            "name": "Todo",
            "description": "API for todos in the system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/todos": {
            "get": {
                "tags": [
                    "Todo"
                ],
                "summary": "Get all todos in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/Todos"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Todo"
                ],
                "summary": "Create a new todo in system",
                "requestBody": {
                    "description": "Todo Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Todo"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/Todo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/todos/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the todo that we want to match",
                    "type": "number"
                }
            ],
            "get": {
                "tags": [
                    "Todo"
                ],
                "summary": "Get todo with given ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Todo with id",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/Todo"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "put": {
                "summary": "Update Todo with given ID",
                "tags": [
                    "Todo"
                ],
                "requestBody": {
                    "description": "Todo Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Todo"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Todo with id",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/Todo"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Todo not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete Todo with given ID",
                "tags": [
                    "Todo"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Todo with id",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Todo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Todos": {
                "type": "object",
                "properties": {
                    "todos": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Todo"
                        }
                    }
                }
            }
        }
    }
}